{"version":3,"sources":["components/Search.js","components/Appointment.js","components/AppointmentInfo.js","App.js","index.js"],"names":["Dropdown","toggle","orderBy","onOrderByChange","sortBy","onSortByChange","className","role","aria-orientation","aria-labelledby","onClick","Search","query","onQueryChange","useState","toggleSort","setToggleSort","htmlFor","type","name","id","value","onChange","e","target","placeholder","aria-haspopup","aria-expanded","myorder","mysort","Appointment","onSendAppointment","lastId","clearData","aptNotes","petName","ownerName","aptDate","aptTime","toggleForm","setTogglreForm","formData","setFormData","rows","appointmentInfo","AppointmentInfo","appointment","onDeleteAppointment","App","AppointmentList","setAppointmentList","setQuery","setSortBy","setOrderBy","filteredAppointment","filter","iteam","toLowerCase","includes","sort","a","b","order","fetchData","useCallback","fetch","then","response","json","data","useEffect","reduce","max","Number","myquery","map","appointmentID","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4737250a.chunk.js","sourcesContent":["import { BiSearch, BiCaretDown, BiCheck } from 'react-icons/bi'\nimport { useState } from 'react'\n\nconst Dropdown = ({toggle, orderBy, onOrderByChange ,sortBy, onSortByChange}) => {\n  if(!toggle){\n    return null\n  }\n    return(\n        <div className=\"origin-top-right absolute right-0 mt-2 w-56\n        rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5\">\n        <div className=\"py-1\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"options-menu\">\n          <div onClick={() => onSortByChange(\"petName\")}\n            className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\n            role=\"menuitem\">Pet Name { (sortBy === 'petName') && <BiCheck /> }</div>\n          <div onClick={() => onSortByChange(\"ownerName\")}\n            className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\n            role=\"menuitem\">Owner Name  { (sortBy === 'ownerName') && <BiCheck /> }</div>\n          <div onClick={() => onSortByChange(\"aptDate\")}\n            className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\n            role=\"menuitem\">Date { (sortBy === 'aptDate') && <BiCheck /> }</div>\n          <div onClick={() => onOrderByChange(\"asc\")}\n            className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer border-gray-1 border-t-2\"\n            role=\"menuitem\">Asc { (orderBy === 'asc') && <BiCheck /> }</div>\n          <div onClick={() => onOrderByChange(\"dsc\")}\n            className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\n            role=\"menuitem\">Desc { (orderBy === 'dsc') && <BiCheck /> }</div>\n        </div>\n      </div>\n    )\n}\n\nconst Search = ({ query, onQueryChange, orderBy, onOrderByChange ,sortBy, onSortByChange }) => {\n  let [toggleSort, setToggleSort] = useState(false);\n    return(\n        <div className=\"py-5\">\n        <div className=\"mt-1 relative rounded-md shadow-sm\">\n          <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n            <BiSearch />\n            <label htmlFor=\"query\" className=\"sr-only\" />\n          </div>\n          <input type=\"text\" name=\"query\" id=\"query\" value={query}\n            onChange={(e) => {onQueryChange(e.target.value)}}\n            className=\"pl-8 rounded-md focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300\" placeholder=\"Search\" />\n          <div className=\"absolute inset-y-0 right-0 flex items-center\">\n            <div>\n              <button type=\"button\" onClick={()=>{setToggleSort(!toggleSort)}}\n                className=\"justify-center px-4 py-2 bg-blue-400 border-2 border-blue-400 text-sm text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 flex items-center\" id=\"options-menu\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                Sort By <BiCaretDown className=\"ml-2\" />\n              </button>\n              <Dropdown toggle={toggleSort} \n              orderBy={orderBy}\n              onOrderByChange={(myorder) => onOrderByChange(myorder)}\n              sortBy={sortBy}\n              onSortByChange={(mysort) => onSortByChange(mysort)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n}\n\nexport default Search","import { BiCalendarPlus } from \"react-icons/bi\";\nimport { useState } from 'react'\n\nconst Appointment = ({ onSendAppointment, lastId }) => {\n\n  const clearData = {\n    aptNotes: '',\n    petName: '',\n    ownerName: '',\n    aptDate: '',\n    aptTime: ''\n  }\n  let [toggleForm, setTogglreForm] = useState(false)\n  let [formData, setFormData ] = useState(clearData)\n\n  function formDataPublish(){\n    const appointmentInfo = {\n      id: lastId + 1,\n      aptNotes: formData.aptNotes,\n      petName: formData.petName,\n      ownerName: formData.ownerName,\n      aptDate: formData.aptDate + ' ' + formData.aptTime\n    }\n    onSendAppointment(appointmentInfo)\n    setFormData(clearData)\n    setTogglreForm(!toggleForm)\n  }\n\n  return(\n      <div>\n          <button onClick={() => {setTogglreForm(!toggleForm)}}\n          className={`bg-blue-400 text-white px-2 py-3 w-full text-left ${toggleForm ? \"rounded-t-md\" : \"rounded-md\" }`}>\n          <div><BiCalendarPlus className=\"inline-block align-text-top\" />  Add Appointment</div>\n          </button>\n          {\n              toggleForm &&\n              <div className=\"border-r-2 border-b-2 border-l-2 border-light-blue-500 rounded-b-md pl-4 pr-4 pb-4\">\n            <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\n              <label htmlFor=\"ownerName\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                Owner Name\n              </label>\n              <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                <input type=\"text\" name=\"ownerName\" id=\"ownerName\"\n                  onChange={(e) => setFormData({...formData, ownerName: e.target.value })}\n                  value={formData.ownerName}\n                  className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\n              </div>\n            </div>\n    \n            <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\n              <label htmlFor=\"petName\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                Pet Name\n              </label>\n              <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                <input type=\"text\" name=\"petName\" id=\"petName\"\n                  onChange={(e) => setFormData({...formData, petName : e.target.value })}\n                  value={formData.petName}\n                  className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\n              </div>\n            </div>\n    \n            <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\n              <label htmlFor=\"aptDate\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                Apt Date\n              </label>\n              <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                <input type=\"date\" name=\"aptDate\" id=\"aptDate\"\n                  onChange={(e) => setFormData({...formData, aptDate: e.target.value })}\n                  value={formData.aptDate}\n                  className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\n              </div>\n            </div>\n    \n            <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\n              <label htmlFor=\"aptTime\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                Apt Time\n              </label>\n              <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                <input type=\"time\" name=\"aptTime\" id=\"aptTime\"\n                  onChange={(e) => setFormData({...formData, aptTime: e.target.value })}\n                  value={formData.aptTime}\n                  className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\" />\n              </div>\n            </div>\n    \n            <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\n              <label htmlFor=\"aptNotes\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                Appointment Notes\n              </label>\n              <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                <textarea id=\"aptNotes\" name=\"aptNotes\" rows=\"3\"\n                  onChange={(e) => setFormData({...formData, aptNotes: e.target.value })}\n                  value={formData.aptNotes}\n                  className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border-gray-300 rounded-md\" placeholder=\"Detailed comments about the condition\"></textarea>\n              </div>\n            </div>\n    \n    \n            <div className=\"pt-5\">\n              <div className=\"flex justify-end\">\n                <button onClick={formDataPublish} type=\"submit\" className=\"ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-400 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-400\">\n                  Submit\n                </button>\n              </div>\n            </div>\n          </div>\n          }\n      </div>\n\n  )\n}\n\nexport default Appointment","import { BiTrash } from 'react-icons/bi';\n\nconst AppointmentInfo = ({ appointment, onDeleteAppointment }) => {\n    return(\n    <li className=\"px-3 py-3 flex items-start\">\n    <button type=\"button\" onClick={() => onDeleteAppointment(appointment.id)}\n        className=\"p-1.5 mr-1.5 mt-1 rounded text-white bg-red-500 hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\n        <BiTrash />\n    </button>\n    <div className=\"flex-grow\">\n        <div className=\"flex items-center\">\n        <span className=\"flex-none font-medium text-2xl text-blue-500\">{appointment.petName}</span>\n        <span className=\"flex-grow text-right\">{appointment.aptDate}</span>\n        </div>\n        <div><b className=\"font-bold text-blue-500\">Owner:</b> {appointment.ownerName}</div>\n        <div className=\"leading-tight\">{appointment.aptNotes}</div>\n    </div>\n    </li>\n    )\n}\n\nexport default AppointmentInfo","import { BiCalendar } from 'react-icons/bi';\nimport Search from './components/Search';\nimport Apponitment from './components/Appointment'\nimport AppointmentInfo from './components/AppointmentInfo'\nimport { useState, useEffect, useCallback } from 'react'\n\nfunction App() {\n\n  let [ AppointmentList, setAppointmentList ] = useState([]);\n  let [ query, setQuery ] = useState(\"\");\n  let [ sortBy, setSortBy] = useState(\"petName\")\n  let [ orderBy, setOrderBy] = useState(\"asc\")\n\n  const filteredAppointment = AppointmentList.filter( \n    iteam => {\n      return(\n        iteam.petName.toLowerCase().includes(query.toLowerCase()) ||\n        iteam.ownerName.toLowerCase().includes(query.toLowerCase()) ||\n        iteam.aptNotes.toLowerCase().includes(query.toLowerCase()) \n      )\n    }\n  ).sort((a,b) => {\n    let order = (orderBy === 'asc')? 1 : -1 ;\n    if( a[sortBy].toLowerCase() < b[sortBy].toLowerCase() )\n      return -1*order\n    else return 1*order;\n  })\n\n  const fetchData = useCallback(\n    () => {\n      fetch('./data.json')\n        .then(response => response.json()) \n        .then(data => {\n            setAppointmentList(data)\n          })\n    },\n    [],\n  )\n\n  useEffect( () => {\n    fetchData()\n  }, [fetchData])\n\n  return (\n    <div className=\"App container mt-3 mx-auto font-thin\">\n       <h1 className=\"text-5xl\"> \n        Your Appointment <BiCalendar className=\"inline-block text-red-300 text-5xl\" />  \n       </h1> \n       <Apponitment \n        onSendAppointment={appointment => { setAppointmentList([...AppointmentList,appointment]) }}\n        lastId={AppointmentList.reduce((max,iteam) => Number(iteam.id) > max ? Number(iteam.id) : max ,0)}\n       />\n       <Search query={query}\n        onQueryChange={(myquery) => setQuery(myquery)}\n        orderBy={orderBy}\n        onOrderByChange={(myorder) => setOrderBy(myorder)}\n        sortBy={sortBy}\n        onSortByChange={(mysort) => setSortBy(mysort)}\n       />\n\n       <ul className=\"divide-y divide-gray-200\">\n        {filteredAppointment.map(appointment => (\n          <AppointmentInfo \n            appointment={appointment} \n            onDeleteAppointment={\n              appointmentID => {\n                setAppointmentList(AppointmentList.filter(appointment => appointment.id !== appointmentID))\n              }\n            }\n            key={appointment.id} />\n        ))}\n       </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}